# Generated by Django 5.1.3 on 2024-11-27 21:01

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('homes', '0001_initial'),
        ('residents', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=3600), help_text='Expected duration of the service')),
                ('is_companion_service', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='BlockedTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(null=True)),
                ('start_time', models.TimeField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('end_time', models.TimeField(null=True)),
                ('reason', models.CharField(max_length=100)),
                ('caregivers', models.ManyToManyField(blank=True, related_name='blocked_times', to=settings.AUTH_USER_MODEL)),
                ('locations', models.ManyToManyField(blank=True, related_name='blocked_times', to='homes.carehome')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('unscheduled', 'Unscheduled'), ('scheduled', 'Scheduled'), ('completed', 'Completed'), ('not_completed', 'Not Completed'), ('refused', 'Refused'), ('missed', 'Missed')], default='unscheduled', max_length=20)),
                ('completion_reason', models.CharField(blank=True, choices=[('completed', 'Service Completed'), ('refused', 'Refused Service'), ('family_visit_no_notice', 'Family Visit (No Notice)')], max_length=50, null=True)),
                ('reschedule_reason', models.CharField(blank=True, choices=[('hospital', 'Hospital'), ('illness', 'Illness'), ('isolation', 'Isolation'), ('approved_family_visit', 'Approved Family Visit')], max_length=50, null=True)),
                ('completion_notes', models.TextField(blank=True, null=True)),
                ('refusal_count', models.PositiveIntegerField(default=0)),
                ('last_refusal_date', models.DateField(blank=True, null=True)),
                ('frequency_id', models.UUIDField(blank=True, null=True)),
                ('caregiver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services', to=settings.AUTH_USER_MODEL)),
                ('resident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='residents.resident')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.servicetype')),
            ],
        ),
        migrations.CreateModel(
            name='ResidentServiceFrequency',
            fields=[
                ('recurrence_pattern', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], max_length=10, null=True)),
                ('frequency', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('preferred_days', models.CharField(default='[]', max_length=100)),
                ('start_time', models.TimeField(null=True)),
                ('end_time', models.TimeField(null=True)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('recurrence_end', models.CharField(choices=[('never', 'Never'), ('after', 'After'), ('on_date', 'On Date')], default='never', max_length=10)),
                ('occurrences', models.PositiveIntegerField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('caregiver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_frequencies', to=settings.AUTH_USER_MODEL)),
                ('resident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_frequencies', to='residents.resident')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.servicetype')),
            ],
        ),
        migrations.CreateModel(
            name='Escalation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('escalation_type', models.CharField(choices=[('refusal', 'Service Refusal'), ('missed', 'Missed Service')], max_length=20, null=True)),
                ('reason', models.CharField(max_length=100)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('resolved', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('resident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='residents.resident')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_escalations', to=settings.AUTH_USER_MODEL)),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.servicetype')),
            ],
        ),
        migrations.CreateModel(
            name='ResidentPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_days', models.CharField(max_length=100)),
                ('preferred_time_start', models.TimeField()),
                ('preferred_time_end', models.TimeField()),
                ('resident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='residents.resident')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.servicetype')),
            ],
            options={
                'unique_together': {('resident', 'service_type')},
            },
        ),
    ]
